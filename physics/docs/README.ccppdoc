structure documentation using pages and modules:
http://alesnosek.com/blog/2015/06/21/the-structure-of-doxygen-documentation/
The refman.tex file generated by Doxygen needs to be modified. You have to add one line to it. Find the line that starts:

\makeindex

and add this line after it
\graphicspath{{../html/}}

You could do this manually, but then you have to do it every time you generate a pdf, since refman.tex is rewritten each time.

Inserting images

Last thing that our sample project illustrates is inserting images 
into Doxygen documentation. You’ll need to have your images ready 
in several graphical formats (.svg, .eps, …) depending on which 
Doxygen ouput you’re willing to generate. 
For example, for Latex output the images must 
be provided in Encapsulated PostScript (.eps). 
Example of including the same image in multiple formats 
for HTML and Latex outputs:

1
2
@image html people.svg
@image latex people.eps "People image" width=\textwidth

DOT graphs

The DOT language allows for simple definition of graphs. You can find a great documentation with many examples of DOT graphs in the manual Drawing graphs with dot. Doxygen tag @dot allows for embedding the DOT graph definition directly into your documentation. The nodes of the graph can be made hyperlinks as it is demonstrated in the sample project. Doxygen itself uses DOT graphs to generate the class inheritance and call graph diagrams. In order to generate the DOT diagrams you need to have dot utility installed. On most distributions the dot utility can be found in the graphviz package.
